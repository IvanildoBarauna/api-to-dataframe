name: Build, Version, and Publish Package

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install Poetry
        run: | 
          pip install --upgrade pip
          curl -sSL https://install.python-poetry.org | python3 -
          poetry config virtualenvs.create false
          poetry install

      - name: Increment version
        run: |
          poetry version patch  # params: patch, minor, major
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          BRANCH_NAME=version-increment-$(date +%s)
          git checkout -b $BRANCH_NAME
          git commit -am "chore: Incremented version"
          git push --set-upstream origin $BRANCH_NAME
          echo ${{ secrets.GITHUB_TOKEN }} | gh auth login --with-token
          unset GITHUB_TOKEN
          gh pr create --title "Version increment" --body "Incremented version to $(poetry version -s)" --head $BRANCH_NAME --base main
          gh pr merge --squash --admin --delete-branch
          git checkout main
          git pull origin main
          git tag $(poetry version -s)
          git push origin --tags

      - name: Build package
        run: poetry build

      - name: Publish package to PyPI
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_TOKEN }}
        run: poetry publish --username __token__ --password $POETRY_PYPI_TOKEN_PYPI

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: $(poetry version -s)
          release_name: Release $(poetry version -s)
          body: |
            Release $(poetry version -s) created.
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/your-package-name-$(poetry version -s).tar.gz
          asset_name: your-package-name-$(poetry version -s).tar.gz
          asset_content_type: application/gzip
